spring:
  application:
    name: codeless-backend
  datasource:
    url: jdbc:postgresql://localhost:5432/codeless_db
    username: ${DB_USERNAME:codeless_user}
    password: ${DB_PASSWORD:superuser}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Start app even if DB is down; connections will fail at runtime until DB is up
      initializationFailTimeout: 0
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: false  # Disabled - migrations already run in Neon manually
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false

server:
  port: ${PORT:8080}
  servlet:
    context-path: /

# Comma-separated list of allowed origins for CORS
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200}

logging:
  level:
    org.springframework: info
    org.springframework.security: DEBUG
    com.codeless.backend: DEBUG
    org.flywaydb: DEBUG
    org.hibernate.SQL: DEBUG

security:
  jwt:
    # Base64-encoded 256-bit secret; override via env SECURITY_JWT_SECRET
    secret: ${SECURITY_JWT_SECRET:ZmFrZS1kZXYtc2VjcmV0LXNob3VsZC1iZS1lbmNyeXB0ZWQ=}
    # Access token expiry (seconds)
    expiration-seconds: ${SECURITY_JWT_EXPIRATION_SECONDS:3600}
    # Allowed clock skew for token validation (seconds)
    clock-skew-seconds: ${SECURITY_JWT_CLOCK_SKEW_SECONDS:30}

app:
  url: ${APP_URL:http://localhost:4200}

paypal:
  client-id: ${PAYPAL_CLIENT_ID:}
  client-secret: ${PAYPAL_CLIENT_SECRET:}
  webhook-id: ${PAYPAL_WEBHOOK_ID:}
  base-url: ${PAYPAL_BASE_URL:https://api-m.sandbox.paypal.com}

